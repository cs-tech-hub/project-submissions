name: Auto Fork Student Repos

on:
  issues:
    types: [opened, edited]   # runs when a student submits/edits repo link
  schedule:
    - cron: "*/10 * * * *"    # also runs every 10 minutes to sync all repos
  workflow_dispatch:           # allow manual run

jobs:
  handle-issue:
    if: github.event_name == 'issues'
    runs-on: ubuntu-latest
    steps:
      - name: Extract repo link from issue
        id: extract
        run: |
          echo "ISSUE_BODY='${{ github.event.issue.body }}'" >> $GITHUB_ENV
          # Expect repo link like https://github.com/user/repo
          REPO_URL=$(echo "${{ github.event.issue.body }}" | grep -oE 'https://github.com/[^ ]+')
          if [ -z "$REPO_URL" ]; then
            echo "No valid GitHub repo link found in issue body"
            exit 1
          fi
          echo "REPO_URL=$REPO_URL" >> $GITHUB_ENV
          OWNER=$(echo $REPO_URL | cut -d'/' -f4)
          REPO=$(echo $REPO_URL | cut -d'/' -f5)
          echo "SRC_OWNER=$OWNER" >> $GITHUB_ENV
          echo "SRC_REPO=$REPO" >> $GITHUB_ENV

      - name: Fork into org
        run: |
          echo "Forking $SRC_OWNER/$SRC_REPO into org..."
          gh repo fork $SRC_OWNER/$SRC_REPO --org ncas-eduhub --remote=false --clone=false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  sync-repos:
    if: github.event_name != 'issues'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Sync all student repos
        run: |
          echo "Fetching all repos under org..."
          gh repo list YOUR_ORG_NAME --limit 200 --json nameWithOwner -q '.[].nameWithOwner' > repos.txt
          while IFS= read -r repo; do
            echo "Syncing $repo..."
            gh repo sync "$repo"
          done < repos.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
